#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <iostream.h>
#include <time.h>

#ifdef _RATE48000

#define   GROUP_DELAY 31
//#define   REV_FILTERL 63
#define   REV_FILTERL 109

#else                      //_RATE441000

#define   GROUP_DELAY 28
//#define   REV_FILTERL 57
#define   REV_FILTERL 101

#endif

#define FRAMEL 8192
#define Max_Acqtime 3
#define Max_Sync_Jitter 50


#define min(a,b)  a>b?b:a
#define ESP 0.0000000000000002220446049250313

#define OVERTIME 10

struct _State
{
	int Sync_State;
	int Count_Acq;
	int Sync_pos;
	double Max_Rxpn_AbsShiftAdd;
	int frame;

};



struct _corrstr
{	
	int positon;
	double maxvalue;
};

#ifdef _RATE48000     //改动矩阵的同时需改动上面REV_FILTERL变量的宏定义

/*const double h_extfilter[63] ={
	-0.0062,-0.0061,-0.0047,-0.0020,0.0016,0.0053,0.0083,0.0099,
	0.0095,0.0069,0.0024,-0.0034,-0.0093,-0.0140,-0.0162,-0.0152,
	-0.0106,-0.0027,0.0073,0.0175,0.0259,0.0301,0.0283,0.0193,
	0.0029,-0.0200,-0.0473,-0.0763,-0.1036,-0.1260,-0.1407,0.8542,
	-0.1407,-0.1260 ,-0.1036,-0.0763,-0.0473,-0.0200,0.0029,0.0193,
	0.0283,0.0301,0.0259,0.0175,0.0073,-0.0027,-0.0106,-0.0152,
	-0.0162,-0.0140,-0.0093,-0.0034,0.0024,0.0069,0.0095,0.0099,    
	0.0083,0.0053,0.0016,-0.0020,-0.0047,-0.0061,-0.0062
};*/
//hp_filter  [3,4]*1e3: Astop = -20 :Rpass = 0.05; 
const double h_extfilter[109] ={
	0.000806,0.000983,0.001068,0.001026,0.000835,0.000487,-0.000000,-0.000590,-0.001223,-0.001823,
	-0.002306,-0.002588,-0.002597,-0.002287,-0.001643,-0.000691,0.000498,0.001814,0.003116,0.004241,
	0.005026,0.005325,0.005033,0.004099,0.002544,0.000465,-0.001965,-0.004508,-0.006879,-0.008775,
	-0.009907,-0.010034,-0.008998,-0.006750,-0.003373,0.000915,0.005760,0.010697,0.015179,0.018624,
	0.020466,0.020208,0.017476,0.012061,0.003956,-0.006632,-0.019282,-0.033381,-0.048161,-0.062757,
	-0.076269,-0.087836,-0.096699,-0.102268,0.895833,-0.102268,-0.096699,-0.087836,-0.076269,-0.062757,
	-0.048161,-0.033381,-0.019282,-0.006632,0.003956,0.012061,0.017476,0.020208,0.020466,0.018624,
	0.015179,0.010697,0.005760,0.000915,-0.003373,-0.006750,-0.008998,-0.010034,-0.009907,-0.008775,
	-0.006879,-0.004508,-0.001965,0.000465,0.002544,0.004099,0.005033,0.005325,0.005026,0.004241,
	0.003116,0.001814,0.000498,-0.000691,-0.001643,-0.002287,-0.002597,-0.002588,-0.002306,-0.001823,
	-0.001223,-0.000590,-0.000000,0.000487,0.000835,0.001026,0.001068,0.000983,0.000806
};
//hp_filter  [2,3]*1e3: Astop = -20 :Rpass = 0.01; 

#else

/*const double h_extfilter[57] ={
	-0.0068,-0.0058,-0.0031,0.0009,0.0052,0.0089,0.0107,0.0100,0.0065,0.0007,-0.0063,-0.0128,
	-0.0169,-0.0173,-0.0130,-0.0044,0.0072,0.0193,0.0289,0.0329,0.0287,0.0151,-0.0077,-0.0379,
	-0.0719,-0.1053,-0.1334,-0.1521,0.8413,-0.1521,-0.1334,-0.1053,-0.0719,-0.0379,-0.0077,0.0151,
	0.0287,0.0329,0.0289,0.0193,0.0072,-0.0044,-0.0130,-0.0173,-0.0169,-0.0128,-0.0063,0.0007,
	0.0065,0.0100,0.0107,0.0089,0.0052,0.0009,-0.0031,-0.0058,-0.0068
};*/
//hp_filter  [3,4]*1e3: Astop = -20 :Rpass = 0.05;  
const double h_extfilter[101] ={
	0.000812,0.001058,0.001196,0.001174,0.000958,0.000537,-0.000067,-0.000796,-0.001561,-0.002249,
	-0.002738,-0.002917,-0.002699,-0.002046,-0.000979,0.000416,0.001990,0.003543,0.004845,0.005668,
	0.005818,0.005167,0.003684,0.001452,-0.001331,-0.004355,-0.007233,-0.009542,-0.010871,-0.010886,
	-0.009380,-0.006319,-0.001873,0.003578,0.009460,0.015052,0.019549,0.022144,0.022116,0.018921,
	0.012266,0.002164,-0.011046,-0.026701,-0.043861,-0.061383,-0.078018,-0.092527,-0.103794,-0.110933,
	0.886621,-0.110933,-0.103794,-0.092527,-0.078018,-0.061383,-0.043861,-0.026701,-0.011046,0.002164,
	0.012266,0.018921,0.022116,0.022144,0.019549,0.015052,0.009460,0.003578,-0.001873,-0.006319,
	-0.009380,-0.010886,-0.010871,-0.009542,-0.007233,-0.004355,-0.001331,0.001452,0.003684,0.005167,
	0.005818,0.005668,0.004845,0.003543,0.001990,0.000416,-0.000979,-0.002046,-0.002699,-0.002917,
	-0.002738,-0.002249,-0.001561,-0.000796,-0.000067,0.000537,0.000958,0.001174,0.001196,0.001058,
	0.000812
}
//hp_filter  [2,3]*1e3: Astop = -20 :Rpass = 0.01; 

#endif
